{
  "openapi": "3.0.0",
  "info": {
    "version": "0.24.2",
    "title": "Waves Data Service",
    "description": "This is a a public Waves Data Services API documentation. The goal of the API is to provide a simple and convenient way to get data from Waves blockchain."
  },
  "servers": [
    {
      "url": "/v0"
    }
  ],
  "tags": [
    {
      "name": "assets",
      "description": "Asset info: ticker, name, decimals, issuer, etc."
    },
    {
      "name": "candles",
      "description": "Candles"
    },
    {
      "name": "pairs",
      "description": "DEX volume, change24, last trade price"
    },
    {
      "name": "transactions",
      "description": "Transactions info"
    },
    {
      "name": "aliases",
      "description": "Get aliases by name or by address"
    },
    {
      "name": "info",
      "description": "Service info: version, etc."
    },
    {
      "name": "matchers",
      "description": "Candles, pairs and other trading endpoints"
    }
  ],
  "paths": {
    "/assets/{id}": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Get asset info by asset ID",
        "operationId": "getAssetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "asset ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          },
          "404": {
            "description": "Asset not found"
          }
        }
      }
    },
    "/assets": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Get a list of assets info from a list of IDs",
        "operationId": "getAssetListByIds",
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "Asset IDs array",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "ticker",
            "description": "Examples: WAVES, BTC, \\*. A wildcard request **ticker=***  returns all assets with tickers.",
            "required": false,
            "example": "*",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Assets prefix-search by the query in asset names, tickers, id.",
            "required": false,
            "example": "bitc",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "After which assets its should search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many Assets to await in response.",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Assets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfAsset"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query, check params"
          }
        }
      }
    },
    "/candles/{amountAsset}/{priceAsset}": {
      "get": {
        "tags": [
          "candles"
        ],
        "summary": "Get candles by amount and price assets. Maximum amount of candles in response â€“ 1440.",
        "operationId": "getCandles",
        "parameters": [
          {
            "name": "amountAsset",
            "in": "path",
            "description": "Asset ID of the amount asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priceAsset",
            "in": "path",
            "description": "Asset ID of the price asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start.",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "interval",
            "description": "Candle interval. One of 1d, 12h, 6h, 3h, 1h, 30m, 15m, 5m, 1m.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "matcher",
            "description": "Matcher address",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Candles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfCandle"
                }
              }
            }
          },
          "404": {
            "description": "Candle not found"
          }
        }
      }
    },
    "/pairs/{amountAsset}/{priceAsset}": {
      "get": {
        "tags": [
          "pairs"
        ],
        "summary": "Get pair info by amount and price assets",
        "operationId": "getPair",
        "parameters": [
          {
            "name": "amountAsset",
            "in": "path",
            "description": "Asset ID of the amount asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priceAsset",
            "in": "path",
            "description": "Asset ID of the price asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "matcher",
            "description": "Matcher address",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pair info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pair"
                }
              }
            }
          },
          "404": {
            "description": "Pair info not found"
          }
        }
      }
    },
    "/pairs": {
      "get": {
        "tags": [
          "pairs"
        ],
        "summary": "1) Get list of pairs info by serialized pairs list; 2) Get all list of pairs info by limit (sort by volume in WAVES)",
        "operationId": "getPairsListAll",
        "parameters": [
          {
            "name": "pairs",
            "in": "query",
            "description": "`{amountAsset}/{priceAsset}` strings list",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "search_by_asset",
            "description": "For searching pairs, that have the `search_by_asset` in asset names, tickers, id of one asset of the pair.",
            "required": false,
            "example": "bitc",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search_by_assets",
            "description": "For searching pairs, that have the `search_by_asset` in asset names, tickers, id of one asset of the pair.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "match_exactly",
            "description": "Whether to search assets of pairs exactly or not. Parameter position is corresponds to asset position.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean"
              }
            }
          },
          {
            "in": "query",
            "name": "matcher",
            "description": "Matcher address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "How many pairs to await in response.",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 1000,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Pairs info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfPair"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/all/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get any transaction info by id",
        "operationId": "getTxsAll",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Any transaction",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TxTransfer"
                    },
                    {
                      "$ref": "#/components/schemas/TxData"
                    },
                    {
                      "$ref": "#/components/schemas/TxLease"
                    },
                    {
                      "$ref": "#/components/schemas/TxLeaseCancel"
                    },
                    {
                      "$ref": "#/components/schemas/TxMassTransfer"
                    },
                    {
                      "$ref": "#/components/schemas/TxExchange"
                    },
                    {
                      "$ref": "#/components/schemas/TxSetScript"
                    },
                    {
                      "$ref": "#/components/schemas/TxSetAssetScript"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/all": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of transactions by applying filters",
        "operationId": "searchTxsAll",
        "parameters": [
          {
            "in": "query",
            "name": "sender",
            "description": "Address-sender of the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of transactions satisfying provided filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfAllTx"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/genesis/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get genesis transaction info by id",
        "operationId": "getTxsGenesis",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Genesis transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxGenesis"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/genesis": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of genesis transactions by applying filters",
        "operationId": "searchTxsGenesis",
        "parameters": [
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "recipient",
            "description": "Search transactions by recipient address",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of genesis transactions satisfying provided filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTxGenesis"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/payment/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get payment transaction info by id",
        "operationId": "getTxsPayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxPayment"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/payment": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of payment transactions by applying filters",
        "operationId": "searchTxsSend",
        "parameters": [
          {
            "in": "query",
            "name": "sender",
            "description": "Address-sender of the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "recipient",
            "description": "Search transactions by recipient address",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of payment transactions satisfying provided filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTxPayment"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/issue/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get issue transaction info by id",
        "operationId": "getTxsIssue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Issue transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxIssue"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/issue": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of issue transactions by applying filters",
        "operationId": "searchTxsIssue",
        "parameters": [
          {
            "in": "query",
            "name": "sender",
            "description": "Address-sender of the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "assetId",
            "description": "Filter transactions by assetId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "script",
            "description": "Filter transactions by script. Supports only exact match. Needs to be url-encoded!",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of issue transactions satisfying provided filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTxIssue"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/transfer/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get transfer transaction info by id",
        "operationId": "getTxsTransfer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxTransfer"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/transfer": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of transfer transactions by applying filters",
        "operationId": "searchTxsTransfer",
        "parameters": [
          {
            "in": "query",
            "name": "sender",
            "description": "Address-sender of the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "recipient",
            "description": "Search transactions by recipient address",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "assetId",
            "description": "Filter transactions by assetId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of transfer transactions satisfying provided filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTxTransfer"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/reissue/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get reissue transaction info by id",
        "operationId": "getTxsReissue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reissue transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxReissue"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/reissue": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of reissue transactions by applying filters",
        "operationId": "searchTxsReissue",
        "parameters": [
          {
            "in": "query",
            "name": "sender",
            "description": "Address-sender of the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "recipient",
            "description": "Search transactions by recipient address",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "assetId",
            "description": "Filter transactions by assetId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of reissue transactions satisfying provided filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTxReissue"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/burn/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get burn transaction info by id",
        "operationId": "getTxsBurn",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Burn transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxBurn"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/burn": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of burn transactions by applying filters",
        "operationId": "searchTxsBurn",
        "parameters": [
          {
            "in": "query",
            "name": "sender",
            "description": "Address-sender of the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "recipient",
            "description": "Search transactions by recipient address",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "assetId",
            "description": "Filter transactions by assetId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of burn transactions satisfying provided filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTxBurn"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/exchange/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get transaction info by id",
        "operationId": "getTxsExchange",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exchange transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxExchange"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/exchange": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of exchange transactions by applying filters",
        "operationId": "searchTxsExchange",
        "parameters": [
          {
            "in": "query",
            "name": "matcher",
            "description": "Address of a matcher which sent the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "orderId",
            "description": "Id of order related to the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sender",
            "description": "Address of a trader-participant in a transaction â€” an ORDER sender",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "amountAsset",
            "description": "Asset ID of the amount asset.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "priceAsset",
            "description": "Asset ID of the price asset.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of exchange transactions satisfy provided filters in descending order by timestamp",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTxExchange"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/lease/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get lease transaction info by id",
        "operationId": "getTxsLease",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lease transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxLease"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/lease": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of lease transactions by applying filters",
        "operationId": "searchTxsLease",
        "parameters": [
          {
            "in": "query",
            "name": "sender",
            "description": "Address-sender of the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "recipient",
            "description": "Search transactions by recipient address",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of lease transactions satisfying provided filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTxLease"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/lease-cancel/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get lease cancel transaction info by id",
        "operationId": "getTxsLeaseCancel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lease cancel transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxLeaseCancel"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/lease-cancel": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of lease cancel transactions by applying filters",
        "operationId": "searchTxsLeaseCancel",
        "parameters": [
          {
            "in": "query",
            "name": "sender",
            "description": "Address-sender of the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "recipient",
            "description": "A recipient of a lease cancelled by this tx",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of lease cancel transactions satisfying provided filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTxLeaseCancel"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/alias/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get alias transaction info by id",
        "operationId": "getTxsAlias",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alias transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxAlias"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/alias": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of alias transactions by applying filters",
        "operationId": "searchTxsAlias",
        "parameters": [
          {
            "in": "query",
            "name": "sender",
            "description": "Address-sender of the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of alias transactions satisfying provided filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTxAlias"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/mass-transfer/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a mass-transfer transaction info by id",
        "operationId": "getTxsMassTransfer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mass transfer transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxMassTransfer"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/mass-transfer": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of mass-transfer transactions by applying filters",
        "operationId": "searchTxsMassTransfer",
        "parameters": [
          {
            "in": "query",
            "name": "sender",
            "description": "Address-sender of the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "recipient",
            "description": "Search transactions by recipient address",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "assetId",
            "description": "Filter transactions by assetId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of mass-transfer transactions satisfying provided filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTxMassTransfer"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/data/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get transaction info by id",
        "operationId": "getTxsData",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxData"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/data": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of data transactions by applying filters",
        "operationId": "searchTxsData",
        "parameters": [
          {
            "in": "query",
            "name": "sender",
            "description": "Address-sender of the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "key",
            "description": "Search transactions by data-enties with given key",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Search transactions by data-enties with given data type",
            "schema": {
              "type": "string",
              "enum": [
                "integer",
                "boolean",
                "string",
                "binary"
              ]
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "Search transactions by data-enties with given value. Can be used only together with `type` parameter",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of data transactions satisfying provided filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTxData"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/sponsorship/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get sponsorship transaction info by id",
        "operationId": "getTxsSponsorship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sponsorship transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxSponsorship"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/sponsorship": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of sponsorship transactions by applying filters",
        "operationId": "searchTxsSponsorship",
        "parameters": [
          {
            "in": "query",
            "name": "sender",
            "description": "Address-sender of the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "recipient",
            "description": "Search transactions by recipient address",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of sponsorship transactions satisfying provided filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTxSponsorship"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/set-script/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a Set script transaction info by id",
        "operationId": "getTxsSetScript",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Set script transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxSetScript"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/set-script": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of Set script transactions by applying filters",
        "operationId": "searchTxsSetScript",
        "parameters": [
          {
            "in": "query",
            "name": "sender",
            "description": "Address-sender of the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "script",
            "description": "Search transactions by the script. Supports only exact match. Needs to be url-encoded!",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of SetScript transactions satisfying provided filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTxSetScript"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/set-asset-script/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a Set asset script transaction info by id",
        "operationId": "getTxsSetAssetScript",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Set asset script transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxSetAssetScript"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/set-asset-script": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of Set asset script transactions by applying filters",
        "operationId": "searchTxsSetAssetScript",
        "parameters": [
          {
            "in": "query",
            "name": "sender",
            "description": "Address-sender of the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "assetId",
            "description": "Search transactions by the assetId.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "script",
            "description": "Search transactions by the script. Supports only exact match. Needs to be url-encoded!",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of SetAssetScript transactions satisfying provided filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTxSetAssetScript"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/invoke-script/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a Invoke-script transaction info by id",
        "operationId": "getTxsInvokeScript",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invoke script transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxInvokeScript"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/invoke-script": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get a list of Invoke script transactions by applying filters",
        "operationId": "searchTxsInvokeScript",
        "parameters": [
          {
            "in": "query",
            "name": "sender",
            "description": "Address-sender of the transaction",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start. Defaults to first transaction's time_stamp in db.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "dapp",
            "description": "Search transactions by the dApp address. Supports only exact match.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "function",
            "description": "Search transactions by the called function name. Supports only exact match.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "Cursor in base64 encoding. Holds information about timestamp, id, sort.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort order. Gonna be rewritten by cursor's sort if present.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many transactions to await in response.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of InvokeScript transactions satisfying provided filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTxInvokeScript"
                }
              }
            }
          }
        }
      }
    },
    "/aliases/{alias}": {
      "get": {
        "tags": [
          "aliases"
        ],
        "summary": "Get address for alias",
        "operationId": "getAlias",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "alias itself",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alias and address. Alias cam be broken (taken by several people), in which case `address` returns null.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "404": {
            "description": "Alias not found"
          }
        }
      }
    },
    "/aliases": {
      "get": {
        "tags": [
          "aliases"
        ],
        "summary": "Get a list of aliases for a given address",
        "operationId": "getAliasesForAddress",
        "parameters": [
          {
            "in": "query",
            "name": "address",
            "description": "Address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "showBroken",
            "description": "Show broken aliases (taken by several people)",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of aliases for given address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfAlias"
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "info"
        ],
        "summary": "Current API version",
        "operationId": "getVersion",
        "responses": {
          "200": {
            "description": "API current version"
          }
        }
      }
    },
    "/matchers/{matcher}/pairs/{amountAsset}/{priceAsset}": {
      "get": {
        "tags": [
          "matchers"
        ],
        "summary": "Get pair info by amount and price assets",
        "operationId": "matcherGetPair",
        "parameters": [
          {
            "name": "matcher",
            "in": "path",
            "description": "Matcher address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amountAsset",
            "in": "path",
            "description": "Asset ID of the amount asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priceAsset",
            "in": "path",
            "description": "Asset ID of the price asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pair info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pair"
                }
              }
            }
          },
          "400": {
            "description": "If assets order in pair is incorrect or asset(s) does not exist"
          }
        }
      }
    },
    "/matchers/{matcher}/pairs": {
      "get": {
        "tags": [
          "matchers"
        ],
        "summary": "1) Get list of pairs info by serialized pairs list; 2) Get all list of pairs info by limit (sort by volume in WAVES)",
        "operationId": "matcherGetPairsListAll",
        "parameters": [
          {
            "in": "path",
            "name": "matcher",
            "description": "Matcher address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pairs",
            "in": "query",
            "description": "`{amountAsset}/{priceAsset}` strings list",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "search_by_asset",
            "description": "For searching pairs, that have the `search_by_asset` in asset names, tickers, id of one asset of the pair.",
            "required": false,
            "example": "bitc",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search_by_assets",
            "description": "For searching pairs, that have the `search_by_asset` in asset names, tickers, id of one asset of the pair.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "match_exactly",
            "description": "Whether to search assets of pairs exactly or not. Parameter position is corresponds to asset position.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "How many pairs to await in response.",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 1000,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Pairs info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfPair"
                }
              }
            }
          },
          "400": {
            "description": "If assets order in one of the pairs is incorrect or at least on of the assets does not exist"
          }
        }
      }
    },
    "/matchers/{matcher}/candles/{amountAsset}/{priceAsset}": {
      "get": {
        "tags": [
          "matchers"
        ],
        "summary": "Get candles by amount and price assets. Maximum amount of candles in response â€“ 1440.",
        "operationId": "matcherGetCandles",
        "parameters": [
          {
            "name": "matcher",
            "in": "path",
            "description": "Matcher address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amountAsset",
            "in": "path",
            "description": "Asset ID of the amount asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priceAsset",
            "in": "path",
            "description": "Asset ID of the price asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeStart",
            "description": "Time range filter, start.",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "timeEnd",
            "description": "Time range filter, end. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "interval",
            "description": "Candle interval. One of 1d, 12h, 6h, 3h, 1h, 30m, 15m, 5m, 1m.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "matcher",
            "description": "Matcher address",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Candles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfCandle"
                }
              }
            }
          },
          "404": {
            "description": "Candle not found"
          }
        }
      }
    },
    "/matchers/{matcher}/rates": {
      "get": {
        "tags": [
          "matchers"
        ],
        "summary": "Estimate assets relative assets rate for asset pairs at specific time",
        "operationId": "estimateRates",
        "parameters": [
          {
            "name": "matcher",
            "in": "path",
            "description": "Matcher address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pairs",
            "in": "query",
            "description": "`{amountAsset}/{priceAsset}` strings list",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "timestamp",
            "description": "Time to estimate the rates at. Defaults to now.",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pair info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfRates"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Asset": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string",
            "example": "asset"
          },
          "data": {
            "type": "object",
            "properties": {
              "ticker": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "precision": {
                "type": "integer",
                "format": "int4"
              },
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "description": {
                "type": "string"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "sender": {
                "type": "string"
              },
              "quantity": {
                "type": "integer",
                "format": "int64"
              },
              "reissuable": {
                "type": "boolean"
              },
              "hasScript": {
                "type": "boolean"
              },
              "minSponsoredFee": {
                "type": "number",
                "format": "int64"
              }
            }
          }
        }
      },
      "Candle": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "candle"
          },
          "data": {
            "type": "object",
            "properties": {
              "time": {
                "type": "string",
                "format": "date-time"
              },
              "open": {
                "type": "number",
                "format": "int64"
              },
              "close": {
                "type": "number",
                "format": "int64"
              },
              "high": {
                "type": "number",
                "format": "int64"
              },
              "low": {
                "type": "number",
                "format": "int64"
              },
              "volume": {
                "type": "number",
                "format": "int64"
              },
              "quoteVolume": {
                "type": "number",
                "format": "int64"
              },
              "weightedAveragePrice": {
                "type": "number",
                "format": "int64"
              },
              "maxHeight": {
                "type": "number"
              },
              "txsCount": {
                "type": "number"
              }
            }
          }
        }
      },
      "Pair": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string",
            "example": "pair"
          },
          "data": {
            "type": "object",
            "properties": {
              "firstPrice": {
                "type": "number"
              },
              "lastPrice": {
                "type": "number"
              },
              "low": {
                "type": "number"
              },
              "high": {
                "type": "number"
              },
              "volume": {
                "type": "number"
              },
              "quoteVolume": {
                "type": "number"
              },
              "volumeWaves": {
                "type": "number"
              },
              "weightedAveragePrice": {
                "type": "number"
              },
              "txsCount": {
                "type": "number"
              }
            }
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "orderSender": {
            "type": "string"
          },
          "senderPublicKey": {
            "type": "string"
          },
          "matcherPublicKey": {
            "type": "string"
          },
          "assetPair": {
            "type": "object",
            "properties": {
              "amountAsset": {
                "type": "string"
              },
              "priceAsset": {
                "type": "string"
              }
            }
          },
          "orderType": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "expiration": {
            "type": "string",
            "format": "date-time"
          },
          "matcherFee": {
            "type": "number"
          },
          "signature": {
            "type": "string"
          }
        }
      },
      "TxExchange": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "sender": {
                "type": "string"
              },
              "senderPublicKey": {
                "type": "string"
              },
              "fee": {
                "type": "number"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "signature": {
                "type": "string"
              },
              "order1": {
                "$ref": "#/components/schemas/Order"
              },
              "order2": {
                "$ref": "#/components/schemas/Order"
              },
              "price": {
                "type": "number"
              },
              "amount": {
                "type": "number"
              },
              "buyMatcherFee": {
                "type": "number"
              },
              "sellMatcherFee": {
                "type": "number"
              },
              "height": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "Alias": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "alias"
          },
          "data": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "alias": {
                "type": "string"
              }
            }
          }
        }
      },
      "TxData": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string",
            "example": "transaction"
          },
          "data": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "sender": {
                "type": "string"
              },
              "senderPublicKey": {
                "type": "string"
              },
              "fee": {
                "type": "number"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "signature": {
                "type": "string"
              },
              "proofs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "data": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "value": {
                          "type": "boolean"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "example": "integer"
                        },
                        "value": {
                          "type": "number"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "TxMassTransfer": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string",
            "example": "transaction"
          },
          "data": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "sender": {
                "type": "string"
              },
              "senderPublicKey": {
                "type": "string"
              },
              "fee": {
                "type": "number"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "signature": {
                "type": "string"
              },
              "proofs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "assetId": {
                "type": "string"
              },
              "attachment": {
                "type": "string"
              },
              "transfers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "number"
                    },
                    "recipient": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "TxTransfer": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string",
            "example": "transaction"
          },
          "data": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "sender": {
                "type": "string"
              },
              "senderPublicKey": {
                "type": "string"
              },
              "feeAsset": {
                "type": "string"
              },
              "fee": {
                "type": "number"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "signature": {
                "type": "string"
              },
              "proofs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "recipient": {
                "type": "string"
              },
              "assetId": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              },
              "attachment": {
                "type": "string"
              }
            }
          }
        }
      },
      "TxLease": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string",
            "example": "transaction"
          },
          "data": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "sender": {
                "type": "string"
              },
              "senderPublicKey": {
                "type": "string"
              },
              "fee": {
                "type": "number"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "signature": {
                "type": "string"
              },
              "proofs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "recipient": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }
        }
      },
      "TxLeaseCancel": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "sender": {
                "type": "string"
              },
              "senderPublicKey": {
                "type": "string"
              },
              "fee": {
                "type": "number"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "signature": {
                "type": "string"
              },
              "proofs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "leaseId": {
                "type": "string"
              }
            }
          }
        }
      },
      "TxSetScript": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string",
            "example": "transaction"
          },
          "data": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "sender": {
                "type": "string"
              },
              "senderPublicKey": {
                "type": "string"
              },
              "fee": {
                "type": "number"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "signature": {
                "type": "string"
              },
              "proofs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "script": {
                "type": "string"
              }
            }
          }
        }
      },
      "TxPayment": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string",
            "example": "transaction"
          },
          "data": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "sender": {
                "type": "string"
              },
              "senderPublicKey": {
                "type": "string"
              },
              "fee": {
                "type": "number"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "signature": {
                "type": "string"
              },
              "proofs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "recipient": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }
        }
      },
      "TxIssue": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string",
            "example": "transaction"
          },
          "data": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "sender": {
                "type": "string"
              },
              "senderPublicKey": {
                "type": "string"
              },
              "fee": {
                "type": "number"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "signature": {
                "type": "string"
              },
              "proofs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "asset_id": {
                "type": "string"
              },
              "asset_name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "quantity": {
                "type": "number"
              },
              "decimals": {
                "type": "number"
              },
              "reissuable": {
                "type": "boolean"
              },
              "script": {
                "type": "string"
              }
            }
          }
        }
      },
      "TxReissue": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string",
            "example": "transaction"
          },
          "data": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "sender": {
                "type": "string"
              },
              "senderPublicKey": {
                "type": "string"
              },
              "fee": {
                "type": "number"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "signature": {
                "type": "string"
              },
              "proofs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "recipient": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }
        }
      },
      "TxBurn": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string",
            "example": "transaction"
          },
          "data": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "sender": {
                "type": "string"
              },
              "senderPublicKey": {
                "type": "string"
              },
              "fee": {
                "type": "number"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "signature": {
                "type": "string"
              },
              "proofs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "recipient": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }
        }
      },
      "TxSponsorship": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string",
            "example": "transaction"
          },
          "data": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "sender": {
                "type": "string"
              },
              "senderPublicKey": {
                "type": "string"
              },
              "fee": {
                "type": "number"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "signature": {
                "type": "string"
              },
              "proofs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "recipient": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }
        }
      },
      "TxAlias": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string",
            "example": "transaction"
          },
          "data": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "sender": {
                "type": "string"
              },
              "senderPublicKey": {
                "type": "string"
              },
              "fee": {
                "type": "number"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "signature": {
                "type": "string"
              },
              "proofs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "alias": {
                "type": "string"
              }
            }
          }
        }
      },
      "TxGenesis": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string",
            "example": "transaction"
          },
          "data": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "senderPublicKey": {
                "type": "string"
              },
              "fee": {
                "type": "number"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "signature": {
                "type": "string"
              },
              "proofs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "recipient": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }
        }
      },
      "TxSetAssetScript": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string",
            "example": "transaction"
          },
          "data": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "sender": {
                "type": "string"
              },
              "senderPublicKey": {
                "type": "string"
              },
              "fee": {
                "type": "number"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "signature": {
                "type": "string"
              },
              "proofs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "assetId": {
                "type": "string"
              },
              "script": {
                "type": "string"
              }
            }
          }
        }
      },
      "TxInvokeScript": {
        "type": "object",
        "properties": {
          "__type": {
            "type": "string",
            "example": "transaction"
          },
          "data": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "sender": {
                "type": "string"
              },
              "senderPublicKey": {
                "type": "string"
              },
              "fee": {
                "type": "number"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "signature": {
                "type": "string"
              },
              "proofs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "dApp": {
                "type": "string"
              },
              "call": {
                "type": "object",
                "properties": {
                  "function": {
                    "type": "string"
                  },
                  "args": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "integer"
                            },
                            "value": {
                              "type": "number"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "boolean"
                            },
                            "value": {
                              "type": "boolean"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "payment": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "number"
                    },
                    "assetId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Rate": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "rate"
          },
          "data": {
            "type": "object",
            "properties": {
              "amountAsset": {
                "type": "string"
              },
              "priceAsset": {
                "type": "string"
              },
              "current": {
                "type": "number"
              }
            }
          }
        }
      },
      "ListOfRates": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rate"
            }
          }
        }
      },
      "ListOfAlias": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Alias"
            }
          }
        }
      },
      "ListOfAsset": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Asset"
            }
          }
        }
      },
      "ListOfCandle": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Candle"
            }
          },
          "lastCursor": {
            "type": "string"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfPair": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pair"
            }
          }
        }
      },
      "ListOfAllTx": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TxGenesis"
                },
                {
                  "$ref": "#/components/schemas/TxPayment"
                },
                {
                  "$ref": "#/components/schemas/TxIssue"
                },
                {
                  "$ref": "#/components/schemas/TxTransfer"
                },
                {
                  "$ref": "#/components/schemas/TxReissue"
                },
                {
                  "$ref": "#/components/schemas/TxBurn"
                },
                {
                  "$ref": "#/components/schemas/TxExchange"
                },
                {
                  "$ref": "#/components/schemas/TxLease"
                },
                {
                  "$ref": "#/components/schemas/TxLeaseCancel"
                },
                {
                  "$ref": "#/components/schemas/TxAlias"
                },
                {
                  "$ref": "#/components/schemas/TxMassTransfer"
                },
                {
                  "$ref": "#/components/schemas/TxData"
                },
                {
                  "$ref": "#/components/schemas/TxSponsorship"
                },
                {
                  "$ref": "#/components/schemas/TxSetScript"
                },
                {
                  "$ref": "#/components/schemas/TxSetAssetScript"
                },
                {
                  "$ref": "#/components/schemas/TxInvokeScript"
                }
              ]
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfTxGenesis": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxGenesis"
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfTxPayment": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxPayment"
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfTxIssue": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxIssue"
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfTxTransfer": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxTransfer"
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfTxReissue": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxReissue"
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfTxBurn": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxBurn"
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfTxExchange": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxExchange"
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfTxLease": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxLease"
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfTxLeaseCancel": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxLeaseCancel"
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfTxAlias": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxAlias"
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfTxMassTransfer": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxMassTransfer"
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfTxData": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxData"
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfTxSponsorship": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxSponsorship"
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfTxSetScript": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxSetScript"
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfTxSetAssetScript": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxSetAssetScript"
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      },
      "ListOfTxInvokeScript": {
        "type": "object",
        "required": [
          "__type",
          "data"
        ],
        "properties": {
          "__type": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxInvokeScript"
            }
          },
          "lastCursor": {
            "type": "string",
            "example": "U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj"
          },
          "isLastPage": {
            "type": "boolean"
          }
        }
      }
    }
  }
}
