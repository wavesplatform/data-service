// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`pairs daemon sql test fill table 1`] = `"insert into \\"pairs\\" with \\"pairs_cte\\" as (select \\"amount_asset\\" as \\"amount_asset_id\\", \\"price_asset\\" as \\"price_asset_id\\", (array_agg(e.price * 10 ^(-8 - p_dec.decimals + a_dec.decimals))::numeric[])[1] as \\"last_price\\", (array_agg(e.price * 10 ^(-8 - p_dec.decimals + a_dec.decimals))::numeric[])[array_length(array_agg(e.price * 10 ^(-8 - p_dec.decimals + a_dec.decimals))::numeric[], 1)] as \\"first_price\\", sum(e.amount * 10 ^(-a_dec.decimals)) as \\"volume\\", sum(e.amount * 10 ^(-a_dec.decimals) * e.price * 10 ^(-8 - p_dec.decimals + a_dec.decimals)) as \\"volume_price\\", sum(e.amount * 10 ^(-a_dec.decimals) * e.price * 10 ^(-8 - p_dec.decimals + a_dec.decimals))/ sum(e.amount * 10 ^(-a_dec.decimals)) as \\"weighted_average_price\\", case when amount_asset = 'WAVES' then sum(e.amount * 10 ^(-a_dec.decimals)) when price_asset = 'WAVES' then sum(e.amount * 10 ^(-a_dec.decimals) * e.price * 10 ^(-8 - p_dec.decimals + a_dec.decimals)) end as \\"volume_waves\\" from (select \\"price_asset\\", \\"amount_asset\\", \\"amount\\", \\"price\\" from \\"txs_7\\" where time_stamp >= now() - interval '1 day' order by \\"time_stamp\\" desc) as \\"e\\" inner join \\"asset_decimals\\" as \\"a_dec\\" on \\"e\\".\\"amount_asset\\" = \\"a_dec\\".\\"asset_id\\" inner join \\"asset_decimals\\" as \\"p_dec\\" on \\"e\\".\\"price_asset\\" = \\"p_dec\\".\\"asset_id\\" group by \\"amount_asset\\", \\"price_asset\\") select \\"amount_asset_id\\", \\"price_asset_id\\", \\"first_price\\", \\"last_price\\", \\"volume\\", coalesce(volume_waves, (select p.volume * d.weighted_average_price as \\"volume_waves\\" from \\"pairs_cte\\" as \\"d\\" where (d.amount_asset_id=p.price_asset_id AND d.price_asset_id='WAVES') or (d.price_asset_id=p.price_asset_id AND d.amount_asset_id='WAVES'))) as \\"volume_waves\\" from \\"pairs_cte\\" as \\"p\\""`;
