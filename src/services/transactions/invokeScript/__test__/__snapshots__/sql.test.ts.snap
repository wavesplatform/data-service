// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sql search by type-specific filters supports dapp and function filters 1`] = `"with \\"t_cte\\" as (select \\"t\\".*, \\"a\\".\\"arg_type\\", \\"a\\".\\"arg_value_integer\\", \\"a\\".\\"arg_value_boolean\\", \\"a\\".\\"arg_value_binary\\", \\"a\\".\\"arg_value_string\\", \\"a\\".\\"position_in_args\\", \\"p\\".\\"asset_uid\\", \\"p\\".\\"amount\\", \\"p\\".\\"position_in_payment\\" from \\"txs_16\\" as \\"t\\" left join \\"txs_16_args\\" as \\"a\\" on \\"a\\".\\"tx_uid\\" = \\"t\\".\\"tx_uid\\" left join \\"txs_16_payment\\" as \\"p\\" on \\"p\\".\\"tx_uid\\" = \\"t\\".\\"tx_uid\\" where \\"t\\".\\"tx_uid\\" in (select \\"t\\".\\"tx_uid\\" from \\"txs_16\\" as \\"t\\" where \\"dapp_address_uid\\" = (select \\"uid\\" from \\"addresses\\" where \\"address\\" = 'b3N92gNUHh6jnZmZtdgECTm3cNAZb1Zei6Ve' limit 1) and \\"function_name\\" = 'deposit' order by \\"t\\".\\"tx_uid\\" desc limit 100)) select \\"t\\".\\"tx_uid\\", \\"t\\".\\"height\\", \\"txs\\".\\"tx_type\\", \\"txs\\".\\"id\\", \\"txs\\".\\"time_stamp\\", \\"txs\\".\\"signature\\", \\"txs\\".\\"proofs\\", \\"txs\\".\\"tx_version\\", \\"addr\\".\\"address\\" as \\"sender\\", \\"addr\\".\\"public_key\\" as \\"sender_public_key\\", \\"daddr\\".\\"address\\" as \\"dapp\\", \\"t\\".\\"function_name\\", \\"t\\".\\"arg_type\\", \\"t\\".\\"arg_value_integer\\", \\"t\\".\\"arg_value_boolean\\", \\"t\\".\\"arg_value_binary\\", \\"t\\".\\"arg_value_string\\", \\"t\\".\\"position_in_args\\", \\"a\\".\\"asset_id\\" as \\"asset_id\\", \\"t\\".\\"amount\\", \\"t\\".\\"position_in_payment\\", amount * 10^(case when t.asset_uid is null then -8 else -a.decimals end) as amount, fee * 10^(-8) as fee from \\"t_cte\\" as \\"t\\" left join \\"assets\\" as \\"a\\" on \\"a\\".\\"uid\\" = \\"t\\".\\"asset_uid\\" left join \\"addresses\\" as \\"addr\\" on \\"addr\\".\\"uid\\" = \\"t\\".\\"sender_uid\\" left join \\"addresses\\" as \\"daddr\\" on \\"daddr\\".\\"uid\\" = \\"t\\".\\"dapp_address_uid\\" left join \\"txs\\" on \\"txs\\".\\"uid\\" = \\"t\\".\\"tx_uid\\" order by \\"txs\\".\\"uid\\" desc"`;

exports[`Sql search by type-specific filters supports dapp filter 1`] = `"with \\"t_cte\\" as (select \\"t\\".*, \\"a\\".\\"arg_type\\", \\"a\\".\\"arg_value_integer\\", \\"a\\".\\"arg_value_boolean\\", \\"a\\".\\"arg_value_binary\\", \\"a\\".\\"arg_value_string\\", \\"a\\".\\"position_in_args\\", \\"p\\".\\"asset_uid\\", \\"p\\".\\"amount\\", \\"p\\".\\"position_in_payment\\" from \\"txs_16\\" as \\"t\\" left join \\"txs_16_args\\" as \\"a\\" on \\"a\\".\\"tx_uid\\" = \\"t\\".\\"tx_uid\\" left join \\"txs_16_payment\\" as \\"p\\" on \\"p\\".\\"tx_uid\\" = \\"t\\".\\"tx_uid\\" where \\"t\\".\\"tx_uid\\" in (select \\"t\\".\\"tx_uid\\" from \\"txs_16\\" as \\"t\\" where \\"dapp_address_uid\\" = (select \\"uid\\" from \\"addresses\\" where \\"address\\" = '3N92gNUHh6jnZmZtdgECTm3cNAZb1Zei6Ve' limit 1) order by \\"t\\".\\"tx_uid\\" desc limit 100)) select \\"t\\".\\"tx_uid\\", \\"t\\".\\"height\\", \\"txs\\".\\"tx_type\\", \\"txs\\".\\"id\\", \\"txs\\".\\"time_stamp\\", \\"txs\\".\\"signature\\", \\"txs\\".\\"proofs\\", \\"txs\\".\\"tx_version\\", \\"addr\\".\\"address\\" as \\"sender\\", \\"addr\\".\\"public_key\\" as \\"sender_public_key\\", \\"daddr\\".\\"address\\" as \\"dapp\\", \\"t\\".\\"function_name\\", \\"t\\".\\"arg_type\\", \\"t\\".\\"arg_value_integer\\", \\"t\\".\\"arg_value_boolean\\", \\"t\\".\\"arg_value_binary\\", \\"t\\".\\"arg_value_string\\", \\"t\\".\\"position_in_args\\", \\"a\\".\\"asset_id\\" as \\"asset_id\\", \\"t\\".\\"amount\\", \\"t\\".\\"position_in_payment\\", amount * 10^(case when t.asset_uid is null then -8 else -a.decimals end) as amount, fee * 10^(-8) as fee from \\"t_cte\\" as \\"t\\" left join \\"assets\\" as \\"a\\" on \\"a\\".\\"uid\\" = \\"t\\".\\"asset_uid\\" left join \\"addresses\\" as \\"addr\\" on \\"addr\\".\\"uid\\" = \\"t\\".\\"sender_uid\\" left join \\"addresses\\" as \\"daddr\\" on \\"daddr\\".\\"uid\\" = \\"t\\".\\"dapp_address_uid\\" left join \\"txs\\" on \\"txs\\".\\"uid\\" = \\"t\\".\\"tx_uid\\" order by \\"txs\\".\\"uid\\" desc"`;

exports[`Sql search by type-specific filters supports function filter 1`] = `"with \\"t_cte\\" as (select \\"t\\".*, \\"a\\".\\"arg_type\\", \\"a\\".\\"arg_value_integer\\", \\"a\\".\\"arg_value_boolean\\", \\"a\\".\\"arg_value_binary\\", \\"a\\".\\"arg_value_string\\", \\"a\\".\\"position_in_args\\", \\"p\\".\\"asset_uid\\", \\"p\\".\\"amount\\", \\"p\\".\\"position_in_payment\\" from \\"txs_16\\" as \\"t\\" left join \\"txs_16_args\\" as \\"a\\" on \\"a\\".\\"tx_uid\\" = \\"t\\".\\"tx_uid\\" left join \\"txs_16_payment\\" as \\"p\\" on \\"p\\".\\"tx_uid\\" = \\"t\\".\\"tx_uid\\" where \\"t\\".\\"tx_uid\\" in (select \\"t\\".\\"tx_uid\\" from \\"txs_16\\" as \\"t\\" where \\"function_name\\" = 'deposit' order by \\"t\\".\\"tx_uid\\" desc limit 100)) select \\"t\\".\\"tx_uid\\", \\"t\\".\\"height\\", \\"txs\\".\\"tx_type\\", \\"txs\\".\\"id\\", \\"txs\\".\\"time_stamp\\", \\"txs\\".\\"signature\\", \\"txs\\".\\"proofs\\", \\"txs\\".\\"tx_version\\", \\"addr\\".\\"address\\" as \\"sender\\", \\"addr\\".\\"public_key\\" as \\"sender_public_key\\", \\"daddr\\".\\"address\\" as \\"dapp\\", \\"t\\".\\"function_name\\", \\"t\\".\\"arg_type\\", \\"t\\".\\"arg_value_integer\\", \\"t\\".\\"arg_value_boolean\\", \\"t\\".\\"arg_value_binary\\", \\"t\\".\\"arg_value_string\\", \\"t\\".\\"position_in_args\\", \\"a\\".\\"asset_id\\" as \\"asset_id\\", \\"t\\".\\"amount\\", \\"t\\".\\"position_in_payment\\", amount * 10^(case when t.asset_uid is null then -8 else -a.decimals end) as amount, fee * 10^(-8) as fee from \\"t_cte\\" as \\"t\\" left join \\"assets\\" as \\"a\\" on \\"a\\".\\"uid\\" = \\"t\\".\\"asset_uid\\" left join \\"addresses\\" as \\"addr\\" on \\"addr\\".\\"uid\\" = \\"t\\".\\"sender_uid\\" left join \\"addresses\\" as \\"daddr\\" on \\"daddr\\".\\"uid\\" = \\"t\\".\\"dapp_address_uid\\" left join \\"txs\\" on \\"txs\\".\\"uid\\" = \\"t\\".\\"tx_uid\\" order by \\"txs\\".\\"uid\\" desc"`;
